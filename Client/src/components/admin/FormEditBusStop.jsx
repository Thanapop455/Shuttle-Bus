import React, { useState, useEffect } from "react";
import { getBusStopById, updateBusStop } from "../../api/bus-stop";
import { useParams, useNavigate } from "react-router-dom";
import { toast } from "react-toastify";
import useMaingobal from "../../../store/maingobal";

const FormEditBusStop = () => {
  const { id } = useParams(); // ‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤ ID ‡∏à‡∏≤‡∏Å URL
  const navigate = useNavigate();
  const token = useMaingobal((state) => state.token);
  const getBusStops = useMaingobal((state) => state.getBusStops);

  // ‚úÖ ‡πÉ‡∏ä‡πâ useState ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏Å‡πá‡∏ö‡∏Ñ‡πà‡∏≤‡∏ü‡∏≠‡∏£‡πå‡∏°
  const [form, setForm] = useState({
    name: "",
    latitude: "",
    longitude: "",
  });

  // ‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡πâ‡∏≤‡∏¢‡∏£‡∏ñ‡πÄ‡∏°‡∏∑‡πà‡∏≠ component ‡∏ñ‡∏π‡∏Å mount
  useEffect(() => {
      fetchBusStop(token, id);
  }, [id, token]);

  // ‚úÖ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡πâ‡∏≤‡∏¢‡∏£‡∏ñ‡∏à‡∏≤‡∏Å API ‡∏ï‡∏≤‡∏° ID
  const fetchBusStop = async (token, id) => {
    try {
      const res = await getBusStopById(token, id)
      console.log("res from backend", res);
      setForm(res.data)
    } catch (err){
      console.log("Err fetch data", err);
      
    }
  };

  // ‚úÖ ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡πÉ‡∏ô‡∏ü‡∏≠‡∏£‡πå‡∏°
  const handleOnChange = (e) => {
    setForm({
      ...form,
      [e.target.name]: e.target.value,
    });
  };

  // ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
  const handleSubmit = async (e) => {
    e.preventDefault();
    const stopId = parseInt(id, 10);
    if (isNaN(stopId)) {
      toast.error("ID ‡∏Ç‡∏≠‡∏á‡∏õ‡πâ‡∏≤‡∏¢‡∏£‡∏ñ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á");
      return;
    }

    try {
      await updateBusStop(token, stopId, {
        name: form.name,
        latitude: parseFloat(form.latitude),
        longitude: parseFloat(form.longitude),
      });
      toast.success("üéâ ‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡πâ‡∏≤‡∏¢‡∏£‡∏ñ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!");
      getBusStops(token); // ‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏õ‡πâ‡∏≤‡∏¢‡∏£‡∏ñ‡πÉ‡∏´‡∏°‡πà
      navigate("/admin/busstop"); // ‚úÖ ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏õ‡πâ‡∏≤‡∏¢‡∏£‡∏ñ
    } catch (err) {
      console.error("üö® Error updating bus stop:", err);
      toast.error("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏õ‡πâ‡∏≤‡∏¢‡∏£‡∏ñ‡πÑ‡∏î‡πâ");
    }
  };

  return (
    <div className="container mx-auto p-4 bg-white shadow-md">
      <h1 className="text-lg font-semibold">‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏õ‡πâ‡∏≤‡∏¢‡∏£‡∏ñ</h1>

      <form onSubmit={handleSubmit}>
        <input
          className="border w-full p-2 my-2"
          value={form.name}
          onChange={handleOnChange}
          placeholder="‡∏ä‡∏∑‡πà‡∏≠‡∏õ‡πâ‡∏≤‡∏¢‡∏£‡∏ñ"
          name="name"
          required
        />
        <input
          type="number"
          className="border w-full p-2 my-2"
          value={form.latitude}
          onChange={handleOnChange}
          placeholder="Latitude"
          name="latitude"
          required
        />
        <input
          type="number"
          className="border w-full p-2 my-2"
          value={form.longitude}
          onChange={handleOnChange}
          placeholder="Longitude"
          name="longitude"
          required
        />

        <div className="flex gap-3 mt-4">
          <button
            type="submit"
            className="bg-green-500 text-white px-4 py-2 rounded-md shadow-md hover:bg-green-600"
          >
            ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á
          </button>
          <button
            type="button"
            onClick={() => navigate("/admin/busstop")}
            className="bg-gray-500 text-white px-4 py-2 rounded-md shadow-md hover:bg-gray-600"
          >
            ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å
          </button>
        </div>
      </form>
    </div>
  );
};

export default FormEditBusStop;
