import React, { useState, useEffect } from "react";
import { addBusStop, deleteBusStop, getBusStops } from "../../api/bus-stop";
import { Link } from "react-router-dom";
import useMaingobal from "../../../store/maingobal";
import { LucideTrash, PencilLine, Trash, Trash2 } from "lucide-react";
import { toast } from "react-toastify";
import Swal from "sweetalert2";

const initialState = {
  name: "",
  latitude: "",
  longitude: "",
};

const FormBusStop = () => {
  const token = useMaingobal((state) => state.token);
  const getBusStopsFromStore = useMaingobal((state) => state.getBusStops);
  const busstops = useMaingobal((state) => state.busstops)
  const [form, setForm] = useState({
    name: "",
    latitude: "",
    longitude: "",
  });

  useEffect(() => {
    getBusStopsFromStore(token)
  }, []);



  // ‚úÖ ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡πÉ‡∏ô‡∏ü‡∏≠‡∏£‡πå‡∏°
  const handleOnChange = (e) => {
    console.log(e.target.name, e.target.value);
    setForm({
      ...form,
      [e.target.name]: e.target.value,
    });
  };

  // ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏õ‡πâ‡∏≤‡∏¢‡∏£‡∏ñ‡πÉ‡∏´‡∏°‡πà
  const handleSubmit = async (e) => {
    e.preventDefault();
    try {
      const res = await addBusStop(token, {
        name: form.name,
        latitude: parseFloat(form.latitude),
        longitude: parseFloat(form.longitude),
      });
      toast.success(`‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏õ‡πâ‡∏≤‡∏¢‡∏£‡∏ñ "${res.data.newBusStop.name}" ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!`);
      setForm(initialState);
      getBusStops(token)
      getBusStopsFromStore(token);
    } catch (err) {
      console.error("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:", err);
      toast.error("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏õ‡πâ‡∏≤‡∏¢‡∏£‡∏ñ‡πÑ‡∏î‡πâ!");
    }
  };

  // ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏•‡∏ö‡∏õ‡πâ‡∏≤‡∏¢‡∏£‡∏ñ
  const handleDelete = async (id) => {
    Swal.fire({
      title: "‚ö†Ô∏è ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö?",
      text: "‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏õ‡πâ‡∏≤‡∏¢‡∏£‡∏ñ‡∏ô‡∏µ‡πâ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?",
      icon: "warning",
      showCancelButton: true,
      confirmButtonColor: "#d33",
      cancelButtonColor: "#3085d6",
      confirmButtonText: "üóëÔ∏è ‡∏•‡∏ö‡πÄ‡∏•‡∏¢!",
      cancelButtonText: "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å",
    }).then(async (result) => {
      if (result.isConfirmed) {
        try {
          const res = await deleteBusStop(token, id);
          toast.success("‡∏õ‡πâ‡∏≤‡∏¢‡∏£‡∏ñ‡∏ñ‡∏π‡∏Å‡∏•‡∏ö‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢!");
          getBusStopsFromStore(token);
        } catch (err) {
          console.error("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:", err);
          toast.error("‡∏•‡∏ö‡∏õ‡πâ‡∏≤‡∏¢‡∏£‡∏ñ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!");
        }
      }
    });
  };

  return (
    <div className="container mx-auto p-4 bg-white shadow-md">
      <form onSubmit={handleSubmit}>
        <h1>‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏õ‡πâ‡∏≤‡∏¢‡∏£‡∏ñ‡πÉ‡∏´‡∏°‡πà</h1>
        <input
          className="border"
          value={form.name}
          onChange={handleOnChange}
          placeholder="‡∏ä‡∏∑‡πà‡∏≠‡∏õ‡πâ‡∏≤‡∏¢‡∏£‡∏ñ"
          name="name"
        />
        <input
          type="number"
          className="border"
          value={form.latitude}
          onChange={handleOnChange}
          placeholder="Latitude"
          name="latitude"
        />
        <input
          type="number"
          className="border"
          value={form.longitude}
          onChange={handleOnChange}
          placeholder="Longitude"
          name="longitude"
        />
        <button className="bg-green-500 text-white px-4 py-2 rounded-md shadow-md hover:bg-green-600">
          ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏õ‡πâ‡∏≤‡∏¢‡∏£‡∏ñ
        </button>
      </form>

      <hr />
      <br />

      {/* ‚úÖ ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏õ‡πâ‡∏≤‡∏¢‡∏£‡∏ñ */}
      <table className="table border-separate border-spacing-2 w-full">
        <thead>
          <tr className="bg-gray-200">
            <th className="px-4 py-2">No.</th>
            <th className="px-4 py-2">‡∏ä‡∏∑‡πà‡∏≠‡∏õ‡πâ‡∏≤‡∏¢</th>
            <th className="px-4 py-2">Latitude</th>
            <th className="px-4 py-2">Longitude</th>
            <th className="px-4 py-2">‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£</th>
          </tr>
        </thead>
        <tbody>
          {busstops.map((stop, index) => (
            <tr key={stop.id} className="hover:bg-gray-100">
              <td className="px-4 py-2 text-center">{index + 1}</td>
              <td className="px-4 py-2">{stop.name}</td>
              <td className="px-4 py-2 text-center">{stop.latitude}</td>
              <td className="px-4 py-2 text-center">{stop.longitude}</td>
              <td className="px-4 py-2 flex justify-around">
              <p className="bg-green-400 text-white px-3 py-1 rounded-md 
            hover:scale-105 hover:-translate-y-1 hover:duration-200 shadow-md">
              <Link to={`/admin/busstop/${stop.id}`}>
              <PencilLine />
              </Link>
            </p>
                <p
                  className="bg-red-400 text-white px-3 py-1 rounded-md hover:scale-105 hover:-translate-y-1 hover:duration-200 shadow-md"
                  onClick={() => handleDelete(stop.id)}
                >
                  üóëÔ∏è ‡∏•‡∏ö
                </p>
              </td>
            </tr>
          ))}
        </tbody>
      </table>
    </div>
  );
};

export default FormBusStop;
